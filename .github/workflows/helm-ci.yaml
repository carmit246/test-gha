name: Helm ci
on:
  push:
    paths:
    - 'argo-test/**'
    - '.github/**'

env:
  CHARTS_DIR: "argo-test"
  BASE_BRANCH: "main"

jobs:
  find-charts:
    runs-on: ubuntu-latest
    outputs: 
      CHARTS_TO_BUILD: ${{ steps.find-charts.outputs.CHARTS_TO_BUILD }} 
      BUILD_CHARTS: ${{ steps.find-charts.outputs.BUILD_CHARTS }} 
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 2
    
    - uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    - name: install helm
      uses: azure/setup-helm@v3
      with:
        version: "3.9.0"
  
    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.6.0

    - name: check for changes
      id: find-charts
      shell: bash
      run: |
        folders=$(ct list-changed --chart-dirs ${{ env.CHARTS_DIR }} --since HEAD~1 --target-branch ${{ env.BASE_BRANCH }} | tr '\n' ' ')
        echo "FOLDERS=\"$folders\"" >> $GITHUB_OUTPUT
        # if git diff --quiet --name-only HEAD~1 ${{ env.CHARTS_DIR }} ;then
        #   echo "BUILD_CHARTS=false" >> $GITHUB_OUTPUT
        # else
        #   FOLDERS=$(git diff --name-only HEAD~1 ${{ env.CHARTS_DIR }} | xargs -L1 dirname | sed 's/.*\///' | uniq)
        #   echo $FOLDERS
        #   CHARTS_TO_BUILD=()
        #   for folder in $FOLDERS; do
        #     echo "${{ env.CHARTS_DIR }}/$folder"
        #     CHARTS_TO_BUILD+=("\"${{ env.CHARTS_DIR }}/$folder\"")
        #     CHARTS_TO_BUILD+=(",")
        #   done
        #   echo ${#CHARTS_TO_BUILD[@]}
        #     charts=$(echo ${CHARTS_TO_BUILD[@]}| tr '\n' ','| sed 's/,,$//')
        #     echo CHARTS_TO_BUILD=\"{\"charts\":[${charts}]}\"
        #     echo "CHARTS_TO_BUILD={\"charts\":[$charts]}" >> $GITHUB_OUTPUT
        #     echo "BUILD_CHARTS=true" >> $GITHUB_OUTPUT
        # fi

    - name: Set matrix
      id: set-matrix
      if: ${{ needs.find-charts.outputs.folders != '' }}
      shell: bash
      run: |
        CHARTS_TO_BUILD=()
        for folder in ${{ steps.find-charts.outputs.folders }}; do
          echo "Changes found in $folder"
          CHARTS_TO_BUILD+=("\"$folder\"")
          CHARTS_TO_BUILD+=(",")
        done
        charts=$(echo ${CHARTS_TO_BUILD[@]}| tr '\n' ','| sed 's/,,$//')
        echo "CHARTS_TO_BUILD={\"chart\":[$charts]}"
        echo "CHARTS_TO_BUILD={\"chart\":[$charts]}" >> $GITHUB_OUTPUT

  package-chart:
    runs-on: ubuntu-latest
    needs: find-charts
    if: ${{ needs.find-charts.outputs.BUILD_CHARTS == 'true' }}
    strategy:
      matrix: ${{ fromJson(needs.find-charts.outputs.CHARTS_TO_BUILD) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4 
      with: 
       fetch-depth: 2

    - name: increment version
      id: chart-version
      uses: carmit246/test-gha/.github/actions/chart-version@main
      with:
        folder: ${{ env.CHARTS_DIR }}
        chart: ${{ matrix.charts }}
        gh_token: ${{ secrets.PAT }}

    # - name: increment version
    #   id: chart-version
    #   shell: bash
    #   run: |
    #     echo ${{ needs.find-charts.outputs.CHARTS_TO_BUILD }}
    #     echo ${{ matrix.charts }}
    #     current_version=$(cat ${{ matrix.charts }}/Chart.yaml| grep version: | awk '{print $2}')
    #     echo $current_version
    #     new_version=$(IFS=.;set -- $current_version;echo "$1.$((10#$2+1)).$3";)
    #     echo "VERSION=$new_version" >> $GITHUB_OUTPUT
    #     echo sed -i "s/version: ${current_version}/version: ${new_version}/g" ${{ matrix.charts }}/Chart.yaml
    #     sed -i "s/version: ${current_version}/version: ${new_version}/g" ${{ matrix.charts }}/Chart.yaml
    #     message="Increment chart ${{ matrix.charts }} version: $current_version --> $new_version [skip ci]"
    #     echo "$message"
    #     cat ${{ matrix.charts }}/Chart.yaml| grep version: | awk '{print $2}'
    #     git config --global user.email "test@test.com"
    #     git config --global user.name "test"
    #     git add ${{ matrix.charts }}/Chart.yaml
    #     git commit -m "$message"
    #     git push

    
  package-release:
    runs-on: ubuntu-latest
    needs: find-charts
    if: ${{ needs.find-charts.outputs.folders != '' && github.event_name != 'pull_request' }}
    strategy:
      matrix: ${{ fromJson(needs.find-charts.outputs.CHARTS_TO_BUILD) }}
    steps:
    - name: package release
      shell: bash
      run: |
        echo ${{ matrix.charts }}
        helm package ${{ inputs.chart_path }}
        chart=$(echo ${{ inputs.chart_path }} | awk -F "(/)" '{ print $NF }')
        echo $chart
        ls
        chart_version=$(ls | grep ${chart} | sed 's/\.tgz//')
        echo ":white_check_mark: New helm chart release published: ${chart_version}" >> $GITHUB_STEP_SUMMARY