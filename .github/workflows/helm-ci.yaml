name: Helm ci
on:
  push:
    paths:
    - 'argo-test/**'
    - '.github/**'

env:
  CHARTS_DIR: "argo-test"

jobs:
  find-charts:
    runs-on: ubuntu-latest
    outputs: 
      CHARTS_TO_BUILD: ${{ steps.find-charts.outputs.CHARTS_TO_BUILD }} 
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 2
    
    - name: check for changes
      id: find-charts
      shell: bash
      run: |
        git diff --name-only HEAD~1 ${{ env.CHARTS_DIR }} | sed 's/argo-test\///'| sed 's/\/.*//'| uniq 
        FOLDERS=$(git diff --name-only HEAD~1 ${{ env.CHARTS_DIR }} | sed 's/argo-test\///'| sed 's/\/.*//'| uniq)
        CHARTS_TO_BUILD=()
        for folder in $FOLDERS; do
          echo "checking folder " ${{ env.CHARTS_DIR }}/$folder
            CHARTS_TO_BUILD+=(${{ env.CHARTS_DIR }}/$folder)
        done
        echo CHARTS_TO_BUILD=\"{\"charts\":[\"${CHARTS_TO_BUILD}\"]}\"
        echo "CHARTS_TO_BUILD={\"charts\":[\"${CHARTS_TO_BUILD}\"]}" >> $GITHUB_OUTPUT

  package-chart:
    runs-on: ubuntu-latest
    needs: find-charts
    strategy:
      matrix: ${{ fromJson(needs.find-charts.outputs.CHARTS_TO_BUILD) }}
        
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 2
        
    - name: increment version
      id: chart-version
      # if: ${{ steps.find-charts.outputs.CHANGED == 'true' }}
      shell: bash
      run: |
        echo ${{ needs.find-charts.outputs.CHARTS_TO_BUILD }}
        echo ${{ matrix.charts }}
        current_version=$(grep -Po "version: \d*.\K(\d)*(?=\d*)" ${{ matrix.charts }}/Chart.yaml)
        echo $current_version
        new_version=$((current_version+1)) 
        echo "VERSION=$new_version" >> $GITHUB_OUTPUT
        message="${{ matrix.charts }} current_version=$current_version new_version=$new_version"
        echo "$message"
        sed -i "s/^version: .*/version: 0.$new_version.0/" ${{ matrix.charts }}/Chart.yaml
        git config --global user.email "test@test.com"
        git config --global user.name "test"
        git add ${{ matrix.charts }}/Chart.yaml
        git commit -m "$message"
        git push
    
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: "3.9.0"
    
    - name: package release
      shell: bash
      run: |
        helm package ${{ matrix.charts }}
        chart=$(echo ${{ matrix.charts }} | sed 's/argo-test\///'| sed 's/\/.*//')
        echo $chart
        ls | grep ${chart}| sed 's/${chart}-//'| sed '.tgz//'
        version=$(ls | grep ${chart}| sed 's/${chart}-//'| sed 's/\.tgz//')
        echo version: $version
        echo ":white_check_mark: New helm chart release published: ${chart}:${{ steps.chart-version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY