name: Helm ci
on:
  push:
    paths:
    - 'argo-test/**'
    - '.github/**'

env:
  HELM_FOLDERS: '[\"argo-test/app1\",\"argo-test/app2\"]'

jobs:
  # find-charts:
  #   runs-on: ubuntu-latest
  #   outputs: 
  #     CHARTS_TO_BUILD: ${{ steps.find-charts.outputs.CHARTS_TO_BUILD }} 
  #   steps:
  #   - name: checkout
  #     uses: actions/checkout@v4
  #     with:
  #      fetch-depth: 2
    
    # - name: check for changes
    #   id: find-charts
    #   shell: bash
    #   run: |
    #     FOLDERS=("argo-test/app1 argo-test/app2")
    #     CHARTS_TO_BUILD=()
    #     for folder in $FOLDERS; do
    #       echo "checking folder " $folder
    #       res=$(git diff --name-only HEAD~1 $folder | sed 's/argo-test\///'| sed 's/\/.*//')
    #       if [[ $res ]];then
    #         echo "changed: " $res
    #         CHARTS_TO_BUILD+=($folder)
    #       fi
    #     done
    #     echo "Charts to build: [\"$CHARTS_TO_BUILD\"]"
    #     echo "CHARTS_TO_BUILD=[\"${CHARTS_TO_BUILD}\"]" >> $GITHUB_OUTPUT

  package-chart:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ["argo-test/app1","argo-test/app2"]
        #${{ needs.find-charts.outputs.CHARTS_TO_BUILD }}
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 2
    
    - name: check for changes
      id: find-charts
      shell: bash
      run: |
        echo "checking folder " ${{ matrix.value }}
          res=$(git diff --name-only HEAD~1 ${{ matrix.value }})
          if [[ $res ]];then
            echo "changed: " $res
            echo "CHANGED=true" >> $GITHUB_OUTPUT
          else echo "CHANGED=false" >> $GITHUB_OUTPUT
          fi
        
    - name: increment version
      if: ${{ needs.find-charts.outputs.CHANGED == 'true' }}
      shell: bash
      run: |
        echo ${{ matrix.value }}
        current_version=$(grep -Po "version: \d*.\K(\d)*(?=\d*)" ${{ matrix.value }}/Chart.yaml)
        echo $current_version
        new_version=$((current_version+1))
        message=="${{ matrix.value }} current_version=$current_version new_version=$new_version"
        echo "$message"
        sed -i "s/^version: .*/version: 0.$new_version.0/" ${{ matrix.value }}/Chart.yaml
        git config --global user.email "test@test.com"
        git config --global user.name "test"
        git add ${{ matrix.value }}/Chart.yaml
        git commit -m "$message"
        git push
    
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: "3.9.0"
    
    - name: package release
      shell: bash
      run: |
        helm package argo-test/app1
        ls -l