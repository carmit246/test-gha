name: Helm ci
on:
  push:
    paths:
    - 'argo-test/**'
    - '.github/**'

env:
  CHARTS_DIR: "argo-test"

jobs:
  find-charts:
    runs-on: ubuntu-latest
    outputs: 
      CHARTS_TO_BUILD: ${{ steps.find-charts.outputs.CHARTS_TO_BUILD }} 
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 2
    
    - name: check for changes
      id: find-charts
      shell: bash
      run: |
        git diff --name-only HEAD~1 ${{ env.CHARTS_DIR }} | sed 's/argo-test\///'| sed 's/\/.*//'| tr -d '\n'| uniq 
        FOLDERS=$(git diff --name-only HEAD~1 ${{ env.CHARTS_DIR }} | sed 's/argo-test\///'| sed 's/\/.*//'| | tr -d '\n'| uniq)
        CHARTS_TO_BUILD=()
        for folder in $FOLDERS; do
          echo "${{ env.CHARTS_DIR }}/$folder,"
          CHARTS_TO_BUILD+=("${{ env.CHARTS_DIR }}/$folder,")
          echo CHARTS_TO_BUILD=\"{\"charts\":[\"${CHARTS_TO_BUILD}\"]}\"
        done
        CHARTS_TO_BUILD=`echo $CHARTS_TO_BUILD | sed 's/,$//'`
        echo CHARTS_TO_BUILD=\"{\"charts\":[\"${CHARTS_TO_BUILD}\"]}\"
        echo "CHARTS_TO_BUILD={\"charts\":[\"${CHARTS_TO_BUILD}\"]}" >> $GITHUB_OUTPUT

  package-chart:
    runs-on: ubuntu-latest
    needs: find-charts
    strategy:
      matrix: ${{ fromJson(needs.find-charts.outputs.CHARTS_TO_BUILD) }}
        
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 2
        
    - name: increment version
      id: chart-version
      shell: bash
      run: |
        echo ${{ needs.find-charts.outputs.CHARTS_TO_BUILD }}
        echo ${{ matrix.charts }}
        current_version=$(cat ${{ matrix.charts }}/Chart.yaml| grep version: | awk '{print $2}')
        echo $current_version
        new_version=$(IFS=.;set -- $current_version;echo "$1.$((10#$2+1)).$3";)
        echo "VERSION=$new_version" >> $GITHUB_OUTPUT
        sed -i 's/version: $current_version/version: $new_version/g' ${{ matrix.charts }}/Chart.yaml
        message="Increment chart ${{ matrix.charts }} version: $current_version --> $new_version [skip ci]"
        echo "$message"
        git config --global user.email "test@test.com"
        git config --global user.name "test"
        git add ${{ matrix.charts }}/Chart.yaml
        git commit -m "$message"
        git push
    
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: "3.9.0"
    
    - name: package release
      shell: bash
      run: |
        helm package ${{ matrix.charts }}
        chart=$(echo ${{ matrix.charts }} | sed 's/argo-test\///'| sed 's/\/.*//')
        echo $chart
        ls | grep ${chart}| sed 's/${chart}-//'| sed 's/\.tgz//'
        chart_version=$(ls | grep ${chart}| sed 's/-/:/'| sed 's/\.tgz//')
        echo chart_version: $chart_version
        echo ":white_check_mark: New helm chart release published: ${chart_version}" >> $GITHUB_STEP_SUMMARY